
# Parameters
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.50  # layer channel multiple
nc: 80  # number of classes, required
nk: 0   # num of keypoints, (required, specify in data/project/xxx.yaml)




# Structure => [from, number, module, args]
backbone:
  [[-1, 1, RepConv, [64, 3, 2]],    # 0-P1/2
   [-1, 1, RepConv, [128, 3, 2]],   # 1-P2/4
   [-1, 3, C3xESE, [128, False]],   # (c1, c2, n=1, ese=True, shortcut=True) 
   [-1, 1, RepConv, [256, 3, 2]],   # 3-P3/8
   [-1, 6, C3xESE, [256, False]],
   [-1, 1, RepConv, [512, 3, 2]],   # 5-P4/16
   [-1, 9, C3xESE, [512, False]],
   [-1, 1, RepConv, [1024, 3, 2]],  # 7-P5/32
   [-1, 3, C3xESE, [1024, True]],
   [-1, 1, SPPF, [1024, 5]],        # 9
  ]


neck:
  [[-1, 1, Conv, [512, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],   # [-1, 1, DWConvTranspose2d, [512, 4, 2, 1]],
   [[-1, 6], 1, Concat, [1]],  # cat backbone P4
   [-1, 3, C3xESE, [512, True, False]],  # 13    (self, c1, c2, ese=True, shortcut=True) 

   [-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],   # [-1, 1, DWConvTranspose2d, [256, 4, 2, 1]],
   [[-1, 4], 1, Concat, [1]],  # cat backbone P3
   [-1, 3, C3xESE, [256, True, False]],  # 17 (P3/8-small)

   [-1, 1, RepConv, [256, 3, 2]],
   [[-1, 14], 1, Concat, [1]],  # cat head P4
   [-1, 3, C3xESE, [512, True, False]],  # 20 (P4/16-medium)

   [-1, 1, RepConv, [512, 3, 2]],  # [-1, 1, DWConv, [512, 5, 2]],  
   [[-1, 10], 1, Concat, [1]],  # cat head P5
   [-1, 3, C3xESE, [1024, True, False]],  # 23 (P5/32-large)
  ]

head:
  [
   # [[17, 20, 23], 1, DetectX, [nc, nk, anchors]],  # Detect(P3, P4, P5)
   [[17, 20, 23], 1, DetectX, [nc, nk]],  # Detect(P3, P4, P5)
  ]
